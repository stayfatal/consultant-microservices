networks:
  dev:

services:
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 3s
      timeout: 3s
      retries: 5

  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - config.env
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  rabbit:
    image: rabbitmq:3
    ports:
      - 5672:5672
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL","rabbitmqctl status"]
      interval: 10s
      timeout: 10s
      retries: 5


  auth:
    build:
      target: auth
    ports:
      - 8030:8030
    networks:
      - dev
    env_file:
      - config.env
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  gateway:
    build: 
      target: gateway
    ports:
      - 8020:8020
    networks:
      - dev
    env_file:
      - config.env

  chat:
    build: 
      target: chat
    ports:
      - 8000:8000
    networks:
      - dev
    env_file:
      - config.env
    depends_on:
      rabbit:
        condition: service_healthy

  matchmaking:
    build:
      target: matchmaking
    ports:
      - 8010:8010
    env_file:
      - config.env
    networks:
      - dev
    depends_on:
      rabbit:
        condition: service_healthy

  migrations:
    image: migrate/migrate
    entrypoint: 
      - "migrate"
      - "-path"
      - "/migrations"
      - "-database"
      - "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=${POSTGRES_SSL_MODE}"
      - "up"
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - config.env
    networks:
      - dev

volumes:
  db-data: